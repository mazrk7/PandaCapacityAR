//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;
using RosMessageTypes.Std;

namespace RosMessageTypes.JskRecognition
{
    [Serializable]
    public class PolygonArrayMsg : Message
    {
        public const string k_RosMessageName = "jsk_recognition_msgs/PolygonArray";
        public override string RosMessageName => k_RosMessageName;

        //  PolygonArray is a list of PolygonStamped.
        //  You can use jsk_rviz_plugins to visualize PolygonArray on rviz.
        public HeaderMsg header;
        public Geometry.PolygonStampedMsg[] polygons;
        public uint[] labels;
        public float[] likelihood;

        public PolygonArrayMsg()
        {
            this.header = new HeaderMsg();
            this.polygons = new Geometry.PolygonStampedMsg[0];
            this.labels = new uint[0];
            this.likelihood = new float[0];
        }

        public PolygonArrayMsg(HeaderMsg header, Geometry.PolygonStampedMsg[] polygons, uint[] labels, float[] likelihood)
        {
            this.header = header;
            this.polygons = polygons;
            this.labels = labels;
            this.likelihood = likelihood;
        }

        public static PolygonArrayMsg Deserialize(MessageDeserializer deserializer) => new PolygonArrayMsg(deserializer);

        private PolygonArrayMsg(MessageDeserializer deserializer)
        {
            this.header = HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.polygons, Geometry.PolygonStampedMsg.Deserialize, deserializer.ReadLength());
            deserializer.Read(out this.labels, sizeof(uint), deserializer.ReadLength());
            deserializer.Read(out this.likelihood, sizeof(float), deserializer.ReadLength());
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.WriteLength(this.polygons);
            serializer.Write(this.polygons);
            serializer.WriteLength(this.labels);
            serializer.Write(this.labels);
            serializer.WriteLength(this.likelihood);
            serializer.Write(this.likelihood);
        }

        public override string ToString()
        {
            return "PolygonArrayMsg: " +
            "\nheader: " + header.ToString() +
            "\npolygons: " + System.String.Join(", ", polygons.ToList()) +
            "\nlabels: " + System.String.Join(", ", labels.ToList()) +
            "\nlikelihood: " + System.String.Join(", ", likelihood.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
